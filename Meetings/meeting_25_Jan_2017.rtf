{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Paperwork due in before March\
Get list of C++ static code analysis tools, split with Arthur, write reports on each \
Install tools, run them with C++ \
Basic functionality tools \
Errors and bug reporting for tools - framework \
Google - tool Wycheproof \
Norway - beautiful holiday! \
Make a note of commercial static analysis tools\
GrammarTech Code Sonar, Flexelint - Gimple software\
Look for others \
Pen testing tools with Contiki devices\
Orion\
Firefly\
Static analysis and Pen testing \
Dynamic analysis tools\
Other platforms - specific bugs e,g, Contiki on Raspberry Pi \
Google Scholar - Mozilla, chrome etc. Look for the literature - bugs per line of codes. \
Estimate number of bugs based on size and complexity. This is the hypothesis. \
Drivers - buggy - IoT code conclusions. Rate occurrence - \'93IoT bugs occur at a rate twice of xxx systems\'94 \
Bug density in IoT devices \
E.g. bugs in the Riot system, bugs in the mBed system \
Investigate products that have used Contiki - are they regular market things? \
Contiki uses a skeleton of TCP/IP \
Analyse table for insertion \
Set up google drive for Budi, Julio, Arthur and myself \
Contiki mailing list bugs etc. \
Code inspection - by hand \
Typical issues will be with memory etc etc. Look through each example of mem allocation etc. \
heuristics for bug hunting \
3:30 - 4:30 }