Flawfinder version 2.0.0, (C) 2001-2017 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 219
Examining dev/bme280/bme280-arch.h
Examining dev/bme280/bme280-sensor.c
Examining dev/bme280/bme280-sensor.h
Examining dev/bme280/bme280.c
Examining dev/bme280/bme280.h
Examining dev/cc1200/cc1200-802154g-863-870-fsk-50kbps.c
Examining dev/cc1200/cc1200-868-fsk-1-2kbps.c
Examining dev/cc1200/cc1200-arch.h
Examining dev/cc1200/cc1200-conf.h
Examining dev/cc1200/cc1200-const.h
Examining dev/cc1200/cc1200-rf-cfg.h
Examining dev/cc1200/cc1200.c
Examining dev/cc2420/cc2420.c
Examining dev/cc2420/cc2420.h
Examining dev/cc2420/cc2420_const.h
Examining dev/cc2520/cc2520.c
Examining dev/cc2520/cc2520.h
Examining dev/cc2520/cc2520_const.h
Examining dev/disk/disk.h
Examining dev/disk/mmc/mmc-arch.h
Examining dev/disk/mmc/mmc.c
Examining dev/disk/mmc/mmc.h
Examining dev/ds2411/ds2411.c
Examining dev/ds2411/ds2411.h
Examining dev/enc28j60/enc28j60-ip64-driver.c
Examining dev/enc28j60/enc28j60-ip64-driver.h
Examining dev/enc28j60/enc28j60.c
Examining dev/enc28j60/enc28j60.h
Examining dev/sht11/sht11-sensor.c
Examining dev/sht11/sht11-sensor.h
Examining dev/sht11/sht11.c
Examining dev/sht11/sht11.h

FINAL RESULTS:

dev/cc1200/cc1200.c:325:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/cc1200/cc1200.c:344:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/cc1200/cc1200.c:351:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/cc2420/cc2420.c:89:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/cc2520/cc2520.c:68:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/enc28j60/enc28j60.c:39:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/sht11/sht11.c:45:  [4] (format) printf:
  If format strings can be influenced by an attacker, they can be exploited
  (CWE-134). Use a constant for the format specification.
dev/cc1200/cc1200.c:725:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/cc1200/cc1200.c:881:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/cc1200/cc1200.c:2395:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/ds2411/ds2411.c:55:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
dev/ds2411/ds2411.h:37:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
dev/enc28j60/enc28j60-ip64-driver.c:53:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/enc28j60/enc28j60-ip64-driver.c:56:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/enc28j60/enc28j60-ip64-driver.c:57:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/enc28j60/enc28j60-ip64-driver.c:66:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/enc28j60/enc28j60.c:486:  [2] (buffer) memcpy:
  Does not check for buffer overflows when copying to destination (CWE-120).
  Make sure destination can always hold the source data.
dev/cc1200/cc1200.c:436:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
dev/cc1200/cc1200.c:475:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
dev/cc1200/cc1200.c:638:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
dev/cc1200/cc1200.c:860:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).
dev/disk/disk.h:82:  [1] (buffer) read:
  Check buffer boundaries if used in a loop including recursive loops
  (CWE-120, CWE-20).

ANALYSIS SUMMARY:

Hits = 22
Lines analyzed = 9449 in approximately 0.34 seconds (27500 lines/second)
Physical Source Lines of Code (SLOC) = 5568
Hits@level = [0]   0 [1]   5 [2]  10 [3]   0 [4]   7 [5]   0
Hits@level+ = [0+]  22 [1+]  22 [2+]  17 [3+]   7 [4+]   7 [5+]   0
Hits/KSLOC@level+ = [0+] 3.95115 [1+] 3.95115 [2+] 3.05316 [3+] 1.25718 [4+] 1.25718 [5+]   0
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
See 'Secure Programming for Linux and Unix HOWTO'
(http://www.dwheeler.com/secure-programs) for more information.
