Flawfinder version 2.0.0, (C) 2001-2017 David A. Wheeler.
Number of rules (primarily dangerous function names) in C/C++ ruleset: 219
Examining regression-tests/03-base/code/project-conf.h
Examining regression-tests/03-base/code/test-ringbufindex.c
Examining regression-tests/04-rime/code/mesh-node.c
Examining regression-tests/04-rime/code/trickle-node.c
Examining regression-tests/11-ipv6/code/receiver/project-conf.h
Examining regression-tests/11-ipv6/code/receiver/udp-receiver.c
Examining regression-tests/11-ipv6/code/sender/project-conf.h
Examining regression-tests/11-ipv6/code/sender/udp-sender.c
Examining regression-tests/11-ipv6/code/sender/unicast-sender.c
Examining regression-tests/12-rpl/code/project-conf.h
Examining regression-tests/12-rpl/code/receiver-node.c
Examining regression-tests/12-rpl/code/root-node.c
Examining regression-tests/12-rpl/code/sender-node.c
Examining regression-tests/17-slip-radio/code/project-conf.h
Examining regression-tests/17-slip-radio/code/wait-dag.c
Examining regression-tests/21-large-rpl/code/node/client.c
Examining regression-tests/21-large-rpl/code/node/project-conf.h
Examining regression-tests/21-large-rpl/code/router/project-conf.h
Examining regression-tests/21-large-rpl/code/router/router.c
Examining regression-tests/23-rpl-non-storing/code/project-conf.h
Examining regression-tests/23-rpl-non-storing/code/receiver-node.c
Examining regression-tests/23-rpl-non-storing/code/root-node.c
Examining regression-tests/23-rpl-non-storing/code/sender-node.c
Examining regression-tests/25-ieee802154/code/project-conf.h
Examining regression-tests/25-ieee802154/code/project-tsch-conf.h
Examining regression-tests/25-ieee802154/code/test-panid-handling.c
Examining regression-tests/25-ieee802154/code/test-tsch-packet.c
Examining regression-tests/27-tsch/code/common.c
Examining regression-tests/27-tsch/code/common.h
Examining regression-tests/27-tsch/code/project-conf.h
Examining regression-tests/27-tsch/code/test-flush-nbr-queue.c

FINAL RESULTS:

regression-tests/12-rpl/code/sender-node.c:116:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
regression-tests/12-rpl/code/sender-node.c:121:  [2] (buffer) sprintf:
  Does not check for buffer overflows (CWE-120). Use sprintf_s, snprintf, or
  vsnprintf. Risk is low because the source has a constant maximum length.
regression-tests/23-rpl-non-storing/code/sender-node.c:116:  [2] (buffer) char:
  Statically-sized arrays can be improperly restricted, leading to potential
  overflows or other issues (CWE-119!/CWE-120). Perform bounds checking, use
  functions that limit length, or ensure that the size is larger than the
  maximum possible length.
regression-tests/23-rpl-non-storing/code/sender-node.c:121:  [2] (buffer) sprintf:
  Does not check for buffer overflows (CWE-120). Use sprintf_s, snprintf, or
  vsnprintf. Risk is low because the source has a constant maximum length.
regression-tests/12-rpl/code/sender-node.c:123:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).
regression-tests/23-rpl-non-storing/code/sender-node.c:123:  [1] (buffer) strlen:
  Does not handle strings that are not \0-terminated; if given one it may
  perform an over-read (it could cause a crash if unprotected) (CWE-126).

ANALYSIS SUMMARY:

Hits = 6
Lines analyzed = 2984 in approximately 0.17 seconds (17464 lines/second)
Physical Source Lines of Code (SLOC) = 1767
Hits@level = [0]   0 [1]   2 [2]   4 [3]   0 [4]   0 [5]   0
Hits@level+ = [0+]   6 [1+]   6 [2+]   4 [3+]   0 [4+]   0 [5+]   0
Hits/KSLOC@level+ = [0+] 3.39559 [1+] 3.39559 [2+] 2.26372 [3+]   0 [4+]   0 [5+]   0
Minimum risk level = 1
Not every hit is necessarily a security vulnerability.
There may be other security vulnerabilities; review your code!
See 'Secure Programming for Linux and Unix HOWTO'
(http://www.dwheeler.com/secure-programs) for more information.
